@model Core.Models.Sessions.Session
@using System.Security.Claims

@{
    ViewData["Title"] = "Details";
    var userIdString = User.FindFirstValue(ClaimTypes.NameIdentifier);
    int userId = userIdString != null ? int.Parse(userIdString) : 0;
    var sessionRegistrations = Model.SessionRegistrations ?? new List<Core.Models.Sessions.SessionRegistration>();
    bool isRegistered = sessionRegistrations.Any(r => r.UserId == userId);
}

<h1>Details</h1>

<div>
    <h4>Session</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ActivityDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ActivityDate)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EndDate)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Host)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Host)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.MaxParticipants)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.MaxParticipants)
        </dd>

        <dt class="col-sm-2">
            Created By
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreatedBy.Name)
        </dd>

        <dt class="col-sm-2">
            Location
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Location.Name)
        </dd>
    </dl>
</div>
<div>
    @if (User.Identity.IsAuthenticated && User.IsInRole("Member"))
    {
        if (isRegistered)
        {
            <form asp-action="Unregister" method="post">
                <input type="hidden" asp-for="Id" />
                <input type="submit" value="Unregister" class="btn btn-secondary" />
            </form>
        }
        else
        {
            <form asp-action="Register" method="post">
                <input type="hidden" asp-for="Id" />
                <input type="submit" value="Register" class="btn btn-primary" />
            </form>
        }
    }
    @if (User.Identity.IsAuthenticated && User.IsInRole("BoardMember"))
    {
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edit</a>
        <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Delete</a>
    }
    <a asp-action="Index" class="btn btn-link">Back to List</a>
</div>

